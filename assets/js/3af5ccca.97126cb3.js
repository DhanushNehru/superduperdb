"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[8496],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(a),m=o,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},78231:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=a(87462),o=(a(67294),a(3905));const r={sidebar_position:1},i="Welcome to the SuperDuperDB Docs",s={unversionedId:"docs/intro",id:"docs/intro",title:"Welcome to the SuperDuperDB Docs",description:"What is SuperDuperDB?",source:"@site/content/docs/intro.md",sourceDirName:"docs",slug:"/docs/intro",permalink:"/docs/docs/intro",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/content/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/docs/category/getting-started"}},l={},d=[{value:"What is SuperDuperDB?",id:"what-is-superduperdb",level:2},{value:"Mission",id:"mission",level:2},{value:"What can you do with SuperDuperDB?",id:"what-can-you-do-with-superduperdb",level:3},{value:"Who is SuperDuperDB for?",id:"who-is-superduperdb-for",level:3},{value:"SuperDuperDB transforms your datastore into:",id:"superduperdb-transforms-your-datastore-into",level:3},{value:"Background",id:"background",level:2},{value:"Code snippets to pique your interest!",id:"code-snippets-to-pique-your-interest",level:2},{value:"Model frameworks directly integrated with the datastore",id:"model-frameworks-directly-integrated-with-the-datastore",level:3},{value:"Continuous model processing on incoming data",id:"continuous-model-processing-on-incoming-data",level:3},{value:"Use models outputs as inputs to downstream models",id:"use-models-outputs-as-inputs-to-downstream-models",level:3},{value:"Support for &quot;tricky&quot; datatypes",id:"support-for-tricky-datatypes",level:3},{value:"Use your classical datastore as a vector database",id:"use-your-classical-datastore-as-a-vector-database",level:3},{value:"Contents",id:"contents",level:2}],p={toc:d},u="wrapper";function c(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"welcome-to-the-superduperdb-docs"},"Welcome to the SuperDuperDB Docs"),(0,o.kt)("h2",{id:"what-is-superduperdb"},"What is SuperDuperDB?"),(0,o.kt)("p",null,"SuperDuperDB is a Python package which provides tools for developers to apply AI and machine learning in their already deployed datastore, and simultaneously to set-up a scalable, open-source and auditable environment to do this."),(0,o.kt)("p",null,(0,o.kt)("img",{src:a(57419).Z,width:"986",height:"617"})),(0,o.kt)("h2",{id:"mission"},"Mission"),(0,o.kt)("p",null,"At SuperDuperDB, our goal is to massively facilitate and accelerate the developer journey between data and AI models. We aim to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create an ",(0,o.kt)("strong",{parentName:"li"},"easy-to-use"),", ",(0,o.kt)("strong",{parentName:"li"},"extensible")," and ",(0,o.kt)("strong",{parentName:"li"},"comprehensive")," Python framework for integrating AI and\nML directly to the datastore: to databases, object-storage, data-lakes and data-warehouses."),(0,o.kt)("li",{parentName:"ul"},"Empower developers, data scientists and architects to leverage the vast AI\n",(0,o.kt)("strong",{parentName:"li"},"open-source ecosystem")," in their datastore deployments."),(0,o.kt)("li",{parentName:"ul"},"Enable ways-of-working with AI and data which ",(0,o.kt)("strong",{parentName:"li"},"enable scalability")," and industrial scale deployment,\nas well as providing easy-to-use tools for the ",(0,o.kt)("strong",{parentName:"li"},"individual developer"),"."),(0,o.kt)("li",{parentName:"ul"},"Make possible continued use of ",(0,o.kt)("strong",{parentName:"li"},"already existing or deployed datastores"),", in combination with AI and ML;\n",(0,o.kt)("strong",{parentName:"li"},"no migration of data")," to a fancy, new fangled vector-database required."),(0,o.kt)("li",{parentName:"ul"},"Follow a ",(0,o.kt)("strong",{parentName:"li"},"fully open-source approach"),", in particular prioritizing open-source integrations\nin our roadmap going forward"),(0,o.kt)("li",{parentName:"ul"},"Enable individuals and organizations to ",(0,o.kt)("strong",{parentName:"li"},"circumvent vendor lock-in strategies")," now ubiquitous\nin the AI and ML landscapes, by providing a clear toolset to flexibly deploy AI at the\ndatastore ",(0,o.kt)("strong",{parentName:"li"},"without necessitating subscriptions"),", cloud installations, or gated-model-API functionality.")),(0,o.kt)("h3",{id:"what-can-you-do-with-superduperdb"},"What can you do with SuperDuperDB?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Deploy")," all your AI models to automatically ",(0,o.kt)("strong",{parentName:"p"},"compute outputs (inference)")," in your datastore in a single environment with simple Python commands.  ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Train")," models on your data in your datastore simply by querying without additional ingestion and pre-processing.  ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Integrate")," AI APIs (such as OpenAI) to work together with other models on your data effortlessly. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Search")," your data with vector-search, including model management and serving."),(0,o.kt)("h3",{parentName:"li",id:"why-choose-superduperdb"},"Why choose SuperDuperDB?")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Avoid data duplication, pipelines and duplicate infrastructure with a ",(0,o.kt)("strong",{parentName:"p"},"single scalable deployment"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Deployment always up-to-date")," as new data is handled automatically and immediately.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"A ",(0,o.kt)("strong",{parentName:"p"},"simple and familiar Python interface")," that can handle even the most complex AI use-cases."))),(0,o.kt)("h3",{id:"who-is-superduperdb-for"},"Who is SuperDuperDB for?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Python developers")," using datastores (databases/ lakes/ warehouses) who want to build AI into their applications easily."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Data scientists & ML engineers")," who want to develop AI models using their favourite tools, with minimum infrastructural overhead."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Infrastructure engineers")," who want a single scalable setup that supports both local, on-prem and cloud deployment.")),(0,o.kt)("h3",{id:"superduperdb-transforms-your-datastore-into"},"SuperDuperDB transforms your datastore into:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"An end-to-end live AI deployment")," which includes a ",(0,o.kt)("strong",{parentName:"li"},"model repository and registry"),", ",(0,o.kt)("strong",{parentName:"li"},"model training")," and ",(0,o.kt)("strong",{parentName:"li"},"computation of outputs/ inference")," "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"A feature store")," in which the model outputs are stored alongside the inputs in any data format. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"A fully functional vector database")," to easily generate vector embeddings of your data with your favorite models and APIs and connect them with your datastore (and/ or) vector database.")),(0,o.kt)("h2",{id:"background"},"Background"),(0,o.kt)("p",null,'SuperDuperDB is the result of years of experience in research, development and production for\nAI and data. We have come to believe that AI development with data does not need to be as hard as it\ncurrently is. (Read "{doc}',(0,o.kt)("inlineCode",{parentName:"p"},"common_issues"),'"\nfor more context.) By moving to a closer symbiosis of AI and the datastore, we believe\nmany pain-points in AI development become non-issues. With SuperDuperDB:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Model predictions may be ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/usage/models#applying-models-to-data-with-predict"},"evaluated and inserted back into the datastore"),", without ever needing\nto load data from the datastore to the client-side."),(0,o.kt)("li",{parentName:"ul"},"Training may be ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/usage/models#training-models-on-data-with-fit"},"deployed in one line"),", without having to munge, preprocess or fetch data;\nsimply point to the data with a data-base query."),(0,o.kt)("li",{parentName:"ul"},"Models may be configured to ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/usage/models#"},"listen for incoming data"),", maintaining a catalogue of up-to-date\npredictions and features."),(0,o.kt)("li",{parentName:"ul"},"Working ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/explanations/external_data"},"with difficult data types"),', (images, audio, etc.) requires no additional effort in comparison\nto working with "standard data" (numbers, text, etc.)'),(0,o.kt)("li",{parentName:"ul"},'Outputs of configured AI models may be used to "navigate" the datastore, including ',(0,o.kt)("a",{parentName:"li",href:"/docs/docs/usage/vector_index"},"configuring\nand using vector-search")," with just a few lines of Python code.")),(0,o.kt)("h2",{id:"code-snippets-to-pique-your-interest"},"Code snippets to pique your interest!"),(0,o.kt)("h3",{id:"model-frameworks-directly-integrated-with-the-datastore"},"Model frameworks directly integrated with the datastore"),(0,o.kt)("p",null,"SuperDuperDB includes wrappers for treating models from diverse AI frameworks across the open-source Python ecosystem uniformly in combination with the datastore, using a scikit-learn-like\n",(0,o.kt)("inlineCode",{parentName:"p"},".fit()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},".predict()")," API."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# [ Code snippets assume access to a running datastore instance read/write ]\nfrom sklearn.svm import SVC\nimport pymongo\n\nfrom superduperdb.db.mongodb import Collection\nfrom superduperdb import superduper\n\n# Models and datastore clients can be converted to SuperDuperDB objects with a simple wrapper.\nmodel = superduper(SVC())\n\n# SuperDuperDB uses MongoDB by default. SQL integrations are on the way.\ndb = superduper(pymongo.MongoClient().my_db)\n\n# Once wrapped, we can fit and predict \"in\" the datastore, simply\n# specifying the data to be processed with a query.\ncoll = Collection(name='my_collection')\nmodel.fit(X='input_col', y='predict_col', db=db, select=coll.find({'_fold': 'train'}))\n\n# Predictions are saved in the datastore alongside the inputs.\nmodel.predict(X='input_col', db=db, select=coll.find({'_fold': 'valid'}))\n")),(0,o.kt)("h3",{id:"continuous-model-processing-on-incoming-data"},"Continuous model processing on incoming data"),(0,o.kt)("p",null,"SuperDuperDB contains components allowing developers to configure models to continuously infer outputs on specified data, and save the outputs back to the datastore."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# listen the datastore for incoming data, and process this with a model\n# Model outputs are continuously stored in the input records\nmodel.predict(X='input_col', db=db, select=coll.find(), listen=True)\n")),(0,o.kt)("h3",{id:"use-models-outputs-as-inputs-to-downstream-models"},"Use models outputs as inputs to downstream models"),(0,o.kt)("p",null,"Simply add a simple method ",(0,o.kt)("inlineCode",{parentName:"p"},"featurize")," to your queries, to register the fact that one model depends on another:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"model.predict(\n    X='input_col',\n    db=db,\n    select=coll.find().featurize({'X': '<upstream-model-id>'}),  # already registered upstream model-id\n    listen=True,\n)\n")),(0,o.kt)("h3",{id:"support-for-tricky-datatypes"},'Support for "tricky" datatypes'),(0,o.kt)("p",null,"SuperDuperDB includes tools for working with the datastore using the complex data types necessary for AI, such as vectors, tensors, images, audio etc. Native python types may be flexibly saved to the DB, to ease use in tricky AI use-cases, such as computer vision:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.ext.pillow import pil_image as i\n\n# Encoders are first class SuperDuperDB objects which deal with serializing\n# \"non-standard\" data to the datastore \ndb.execute(\n    coll.insert_many([\n    {'img': i(PIL.image.open(path))} for path in images\n    ])\n)\n")),(0,o.kt)("p",null,"Data may be reloaded using standard datastore queries, and conveniently reused in downstream applications, or consumed as direct inputs to AI models. The data loaded are instances of the same Python classes as inserted."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},">>> r = db.execute(coll.find_one())\n>>> r['img'].x\n<PIL.PngImagePlugin.PngImageFile image mode=RGBA size=1164x860>\n")),(0,o.kt)("h3",{id:"use-your-classical-datastore-as-a-vector-database"},"Use your classical datastore as a vector database"),(0,o.kt)("p",null,"SuperDuperDB contains functionality allowing users to treat their standard datastore as a vector-search database, integrating your primary datastore with key-players in the open-source vector-search space."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# First a \"listener\" makes sure vectors stay up-to-date\nindexing_listener = listener(model=OpenAIEmbedding(), key='text', select=collection.find())\n\n# This \"listener\" is linked with a \"VectorIndex\"\ndb.add(VectorIndex('my-index', indexing_listener=indexing_listener))\n\n# The \"VectorIndex\" may be used to search data. Items to be searched against are passed\n# to the registered model and vectorized. No additional app layer is required.\n# By default, SuperDuperDB uses LanceDB for vector comparison operations\ndb.execute(collection.like({'text': 'clothing item'}, 'my-index').find({'brand': 'Nike'}))\n")),(0,o.kt)("h2",{id:"contents"},"Contents"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-{toctree}"},":maxdepth: 3\n\ngetting_started/index\nusage/index\nexplanations/index\ncluster/index\nhow_to/index\nexamples/index\nbackground/index\nsource/modules\n")))}c.isMDXComponent=!0},57419:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/SuperDuperDB_diagram-ad827bcdccb80197b4ec0e922ccfeb58.svg"}}]);