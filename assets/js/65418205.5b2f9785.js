"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5760],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,b=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(b,i(i({ref:t},c),{},{components:n})):a.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[p]="string"==typeof e?e:r,i[1]=d;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8124:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1},i="DB",d={unversionedId:"docs/usage/db",id:"docs/usage/db",title:"DB",description:"The central object for communicating with your datastore in SuperDuperDB is the DB class.",source:"@site/content/docs/usage/db.md",sourceDirName:"docs/usage",slug:"/docs/usage/db",permalink:"/docs/docs/usage/db",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/content/docs/usage/db.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/docs/category/usage"},next:{title:"Encoders",permalink:"/docs/docs/usage/encoders"}},s={},l=[{value:"Databackend",id:"databackend",level:2},{value:"Artifact Store",id:"artifact-store",level:2},{value:"Metadata Store",id:"metadata-store",level:2}],c={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"db"},"DB"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-{note}"},"The `DB` is the primary interface from Python to your data+AI.\n")),(0,r.kt)("p",null,"The central object for communicating with your datastore in SuperDuperDB is the ",(0,r.kt)("inlineCode",{parentName:"p"},"DB")," class."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DB")," object combines 4 basic functionalities involved in integrating AI to the database:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Querying, updating and inserting data "),(0,r.kt)("li",{parentName:"ul"},"Uploading and saving AI models and associated functionality involving large data-blobs"),(0,r.kt)("li",{parentName:"ul"},"Saving metadata related to AI models and associated functionality"),(0,r.kt)("li",{parentName:"ul"},"(Optional) performing vector search on the database using configured AI models")),(0,r.kt)("p",null,"Correspondingly a database may be built by passing these 4 items to the ",(0,r.kt)("inlineCode",{parentName:"p"},"DB.__init__")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.db.base.db import DB\nfrom superduperdb.db.mongodb.data_backend import MongoDatabackend\nfrom superduperdb.db.mongodb.metadata import MongoMetaDataStore\nfrom superduperdb.db.mongodb.artifacts import MongoArtifactStore\nfrom superduperdb.vector_search.lancedb_client import LanceVectorIndex\n\nimport pymongo\n\nmongo_client = pymongo.MongoClient()\nmy_databackend = MongoDatabackend(mongo_client, name='test_db')\nmy_metadata = MongoMetaDataStore(mongo_client, name='test_db')\nmy_artifact_store = MongoArtifactStore(mongo_client, name='_filesystem:test_db')\nvector_database = LanceVectorIndex(uri='~/.lancedb')\n\ndb = DB(\n    data_backend=my_databackend,\n    metadata=my_metadata_store,\n    artifact_store=my_artifact_store,\n    vector_database=my_vector_database,\n)\n")),(0,r.kt)("p",null,"Connecting these 4 elements in this way can be slightly tedious, so we provide a helper function to do this on\nthe basis of the current configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.db.base.build import build_datalayer\n\ndb = build_datalayer()\n")),(0,r.kt)("p",null,"In order to build a database based on defaults, a one-size-fits-all wrapper is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb import superduper\n\ndb = superduper(pymongo.MongoClient().test_db)\n")),(0,r.kt)("h2",{id:"databackend"},"Databackend"),(0,r.kt)("p",null,"Currently we support MongoDB as the data backend, with large data blobs on AWS s3."),(0,r.kt)("h2",{id:"artifact-store"},"Artifact Store"),(0,r.kt)("p",null,"Currently we support ",(0,r.kt)("inlineCode",{parentName:"p"},"gridfs")," on MongoDB as the artifact store."),(0,r.kt)("h2",{id:"metadata-store"},"Metadata Store"),(0,r.kt)("p",null,"Currently we support MongoDB as the metadata store."))}u.isMDXComponent=!0}}]);